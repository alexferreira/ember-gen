#!/usr/bin/env node
var program = require('commander');
var project = require('../src/commands/project');
var build = require('../src/commands/build');
var generate = require('../src/commands/generate');
var doc = require('../doc/main.json');

program
  .version('0.1.0')
  .usage(doc['usage']);

program
  .command('new')
  .description( doc['new'] )
  .usage('[dir]')
  .option('-n, --namespace [name]', doc['new.namespace'])
  .option('-t, --template [name]', doc['new.template'])
  .action(function() { project.apply(null, arguments); });
  
program
  .command('build|b')
  .description( doc['build'] )
  .usage(' ')
  .action(function() { build(program); })
  .option('-m, --minify', doc['build.minify'])
  .option('-w, --watch', doc['build.watch'])

program
  .command('generate|g')
  .description( doc['generate'] )
  .usage( doc['generate.usage'] )
  .action(function() {
    generate.apply(null, arguments);
  })
  .option('-c, --controller [name]', doc['generate.controller'])
  .option('-x, --mixin [name]', doc['generate.mixin'])
  .option('-m, --model [name] [fields]', doc['generate.model'])
  .option('-r, --route [name]', doc['generate.route'])
  .option('-s, --scaffold [name] [fields]', doc['generate.scaffold'])
  .option('-t, --template [name]', doc['generate.template'])
  .option('-h, --helper [name]', doc['generate.helper'])
  .option('-v, --view [name]', doc['generate.view']);

program
  .command('precompile|p')
  .description( doc['precompile'] )
  .action(function() { precompile(program); })
  .option('-d, --directory [directory]', doc['precompile.directory'])
  .option('-f, --file [file]', doc['precompile.file']);

program.parse(process.argv);

//if (program.args[0]) {
  //var command = commands[program.args[0]];
  //message.error("'" + program.args[0] + "' is not an ember-tools command.", command);
  //command(program);
//}

